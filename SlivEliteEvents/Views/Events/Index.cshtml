@model IEnumerable<SlivEliteEvents.Models.Event>
@{
ViewData["Title"] = "Event Calendar";
}
<h1>Event Calendar</h1>
<div class="mb-3">
    <select id="statusFilter" class="form-control w-auto">
        <option value="">All Events</option>
        <option value="Pending">Pending</option>
        <option value="Confirmed">Confirmed</option>
        <option value="Completed">Completed</option>
    </select>
</div>
<div id="calendar" class="calendar-container"></div>

<!-- Event Details Modal -->
<div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventDetailsModalLabel">Event Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Title:</strong> <span id="eventTitle"></span></p>
                <p><strong>Description:</strong> <span id="eventDescription"></span></p>
                <p><strong>Date:</strong> <span id="eventDate"></span></p>
                <p><strong>Location:</strong> <span id="eventLocation"></span></p>
                <p><strong>Guests:</strong> <span id="eventGuests"></span></p>
                <p><strong>Contact:</strong> <span id="eventContact"></span></p>
                <p><strong>Status:</strong> <span id="eventStatus"></span></p>
            </div>
            <div class="modal-footer">
                <a id="editEvent" class="btn btn-primary">Edit</a>
                <button type="button" class="btn btn-danger" id="deleteEvent">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this event?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function () {
        try {
            var calendarEl = document.getElementById('calendar');
            if (!calendarEl) {
                console.error('Calendar element not found');
                return;
            }

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                eventTimeFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                },
                events: {
                    url: '/Events/GetEvents',
                    extraParams: function () {
                        return { status: $('#statusFilter').val() };
                    },
                    failure: function (error) {
                        console.error('Error fetching events:', error);
                        alert('Failed to load events. Check the console for details.');
                    }
                },
                eventClick: function (info) {
                    try {
                        $('#eventTitle').text(info.event.title);
                        $('#eventDescription').text(info.event.extendedProps.description || 'N/A');
                        $('#eventDate').text(info.event.allDay ?
                            info.event.start.toLocaleDateString('mk-MK', { day: '2-digit', month: '2-digit', year: 'numeric' }) + ' (All Day)' :
                            info.event.start.toLocaleDateString('mk-MK', { day: '2-digit', month: '2-digit', year: 'numeric' }) + ' ' +
                            info.event.start.toLocaleTimeString('mk-MK', { hour: '2-digit', minute: '2-digit', hour12: false }) +
                            (info.event.end ? ' - ' +
                                info.event.end.toLocaleDateString('mk-MK', { day: '2-digit', month: '2-digit', year: 'numeric' }) + ' ' +
                                info.event.end.toLocaleTimeString('mk-MK', { hour: '2-digit', minute: '2-digit', hour12: false }) : ''));
                        $('#eventLocation').text(info.event.extendedProps.location);
                        $('#eventGuests').text(info.event.extendedProps.guestCapacity);
                        $('#eventContact').text(info.event.extendedProps.contactPhone || 'N/A');
                        $('#eventStatus').text(info.event.extendedProps.status);
                        $('#editEvent').attr('href', '/Events/Edit/' + info.event.id);
                        $('#deleteEvent').data('id', info.event.id); // Store event ID for deletion

                        var detailsModal = new bootstrap.Modal(document.getElementById('eventDetailsModal'));
                        detailsModal.show();
                    } catch (e) {
                        console.error('Error in eventClick:', e);
                    }
                },
                dateClick: function (info) {
                    window.location.href = '/Events/Create?start=' + info.dateStr;
                },
                eventDidMount: function (info) {
                    var deleteBtn = document.createElement('button');
                    deleteBtn.innerHTML = 'Delete';
                    deleteBtn.className = 'btn btn-sm btn-danger';
                    deleteBtn.onclick = function () {
                        var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
                        modal.show();
                        document.getElementById('confirmDelete').onclick = function () {
                            fetch('/Events/Delete/' + info.event.id, {
                                method: 'POST',
                                headers: { 'X-Requested-With': 'XMLHttpRequest' }
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        info.event.remove();
                                        modal.hide();
                                    } else {
                                        alert('Failed to delete event.');
                                    }
                                })
                                .catch(error => console.error('Error deleting event:', error));
                        };
                    };
                    // info.el.appendChild(deleteBtn);
                }
            });

            calendar.render();

            // Handle Delete button in modal
            $('#deleteEvent').click(function () {
                var eventId = $(this).data('id');
                var detailsModal = bootstrap.Modal.getInstance(document.getElementById('eventDetailsModal'));
                var confirmModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                confirmModal.show();
                document.getElementById('confirmDelete').onclick = function () {
                    fetch('/Events/Delete/' + eventId, {
                        method: 'POST',
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                calendar.getEventById(eventId).remove();
                                confirmModal.hide();
                                detailsModal.hide();
                            } else {
                                alert('Failed to delete event.');
                            }
                        })
                        .catch(error => console.error('Error deleting event:', error));
                };
            });

            $('#statusFilter').change(function () {
                calendar.refetchEvents();
            });
        } catch (e) {
            console.error('Error initializing calendar:', e);
            alert('Failed to initialize calendar. Check the console for details.');
        }
    });
</script>
}